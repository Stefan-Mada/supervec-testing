Source file:

int function(int val1, int val2){
	if(val2 == 1)
		return val1;
	else if (val2 < 1)
		return 0;

	return val1 * function(val1, val2 - 1);
}

Compiled using:
clang++ -I -march=native -mavx2 -O3 -Werror -S -emit-llvm function.cpp -o function.ll

Called supervec using:
$HOME/llvm/build/bin/opt -enable-new-pm=0 -load $HOME/minotaur/build/minotaur.so -so -S function.ll


Sketches output:
$HOME/llvm/build/bin/opt  -enable-new-pm=0 -load $HOME/minotaur/build/minotaur.so -so -S function.ll
---------Sketches------------
(copy reservedconst)
-----------------------------

----------------------------------------
define i32 @_Z8functionii.1.2(i32 %0, i32 %1, i1 %_reservedc_0) noread nowrite nofree {
%2:
  %6 = icmp eq i32 %1, 1
  br i1 %6, label %5, label %3

%3:
  %7 = icmp slt i32 %1, 1
  br i1 %7, label %5, label %4

%4:
  %8 = add nsw i32 %1, 4294967295
  %9 = call i32 @_Z8functionii(i32 %0, i32 %8) noread nowrite nofree
  %10 = mul nsw i32 %9, %0
  ret i32 %10

%5:
  %11 = phi i32 [ %0, %2 ], [ 0, %3 ]
  ret i32 %11
}
=>
define i32 @_Z8functionii.1(i32 %0, i32 %1, i1 %_reservedc_0) noread nowrite nofree {
%2:
  br i1 %_reservedc_0, label %5, label %3

%3:
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %5, label %4

%4:
  %7 = add nsw i32 %1, 4294967295
  %8 = call i32 @_Z8functionii(i32 %0, i32 %7) noread nowrite nofree
  %9 = mul nsw i32 %8, %0
  ret i32 %9

%5:
  %10 = phi i32 [ %0, %2 ], [ 0, %3 ]
  ret i32 %10
}
;result
i1 %_reservedc_0 = #x0 (0)
---------Sketches------------
(copy reservedconst)
-----------------------------

----------------------------------------
define i32 @_Z8functionii.3.4(i32 %0, i32 %1, i1 %_reservedc_0) noread nowrite nofree {
%2:
  br i1 0, label %5, label %3

%3:
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %5, label %4

%4:
  %7 = add nsw i32 %1, 4294967295
  %8 = call i32 @_Z8functionii(i32 %0, i32 %7) noread nowrite nofree
  %9 = mul nsw i32 %8, %0
  ret i32 %9

%5:
  %10 = phi i32 [ %0, %2 ], [ 0, %3 ]
  ret i32 %10
}
=>
define i32 @_Z8functionii.3(i32 %0, i32 %1, i1 %_reservedc_0) noread nowrite nofree {
%2:
  br i1 0, label %5, label %3

%3:
  br i1 %_reservedc_0, label %5, label %4

%4:
  %6 = add nsw i32 %1, 4294967295
  %7 = call i32 @_Z8functionii(i32 %0, i32 %6) noread nowrite nofree
  %8 = mul nsw i32 %7, %0
  ret i32 %8

%5:
  %9 = phi i32 [ %0, %2 ], [ 0, %3 ]
  ret i32 %9
}
;result
i1 %_reservedc_0 = #x1 (1)
---------Sketches------------
(copy reservedconst)
(and %, %)
(and %, %)
(and %, %)
(and %, %)
(and %, reservedconst)
(and %, %)
(and %, %)
(and %, %)
(and %, reservedconst)
(and %, %)
(and %, %)
(and %, reservedconst)
(and %, %)
(and %, reservedconst)
(or %, %)
(or %, %)
(or %, %)
(or %, %)
(or %, reservedconst)
(or %, %)
(or %, %)
(or %, %)
(or %, reservedconst)
(or %, %)
(or %, %)
(or %, reservedconst)
(or %, %)
(or %, reservedconst)
(xor %, %)
(xor %, %)
(xor %, %)
(xor %, %)
(xor %, reservedconst)
(xor %, %)
(xor %, %)
(xor %, %)
(xor %, reservedconst)
(xor %, %)
(xor %, %)
(xor %, reservedconst)
(xor %, %)
(xor %, reservedconst)
(add %, %)
(add %, %)
(add %, %)
(add %, %)
(add %, reservedconst)
(add %, %)
(add %, %)
(add %, %)
(add %, reservedconst)
(add %, %)
(add %, %)
(add %, reservedconst)
(add %, %)
(add %, reservedconst)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub %, %)
(sub reservedconst, %)
(sub reservedconst, %)
(sub reservedconst, %)
(sub reservedconst, %)
(mul %, %)
(mul %, %)
(mul %, %)
(mul %, %)
(mul %, reservedconst)
(mul %, %)
(mul %, %)
(mul %, %)
(mul %, reservedconst)
(mul %, %)
(mul %, %)
(mul %, reservedconst)
(mul %, %)
(mul %, reservedconst)
%
%
%
%
-----------------------------

----------------------------------------
define i32 @_Z8functionii.5.6(i32 %0, i32 %1, i32 %_reservedc_0) noread nowrite nofree {
%2:
  br i1 0, label %5, label %3

%3:
  br i1 1, label %5, label %4

%4:
  %6 = add nsw i32 %1, 4294967295
  %7 = call i32 @_Z8functionii(i32 %0, i32 %6) noread nowrite nofree
  %8 = mul nsw i32 %7, %0
  ret i32 %8

%5:
  %9 = phi i32 [ %0, %2 ], [ 0, %3 ]
  ret i32 %9
}
=>
define i32 @_Z8functionii.5(i32 %0, i32 %1, i32 %_reservedc_0) noread nowrite nofree {
%2:
  br i1 0, label %5, label %3

%3:
  br i1 1, label %5, label %4

%4:
  %6 = add nsw i32 %1, 4294967295
  %7 = call i32 @_Z8functionii(i32 %0, i32 %6) noread nowrite nofree
  ret i32 %_reservedc_0

%5:
  %8 = phi i32 [ %0, %2 ], [ 0, %3 ]
  ret i32 %8
}
;result
i32 %_reservedc_0 = any
Severe Z3 error: invalid argument [code=3]
